{"version":3,"sources":["components/NavBar/index.js","utils/use-space-x.js","components/Error/index.js","components/Breadcrumbs/index.js","utils/constants.js","components/LaunchItem/index.js","utils/format-date.js","components/LoadMoreButton/index.js","components/LaunchPadItem/index.js","components/Sidebar/index.js","pages/Launches/index.js","components/Header/index.js","components/TimeAndLocation/index.js","components/RocketInfo/index.js","components/Video/index.js","components/Gallery/index.js","pages/Launch/index.js","components/PageLink/index.js","pages/Home/index.js","pages/LaunchPads/index.js","components/LaunchPadHeader/index.js","components/LocationAndVehicles/index.js","components/Map/index.js","components/RecentLaunches/index.js","pages/LaunchPad/index.js","navigation/Navigation.js","components/App/index.js","utils/launches-storage.js","index.js"],"names":["NavBar","Flex","as","align","justify","wrap","padding","bg","color","Text","fontFamily","letterSpacing","fontWeight","fontSize","fetcher","a","fetch","response","ok","Error","statusText","json","getSpaceXUrl","path","options","searchParams","URLSearchParams","property","append","process","toString","useSpaceX","endpointUrl","useSWR","useSpaceXPaginated","useSWRInfinite","pageIndex","previousPageData","length","offset","limit","alignItems","justifyContent","width","Alert","status","variant","flexDirection","textAlign","p","size","mr","mt","mb","maxWidth","Breadcrumbs","items","Breadcrumb","spacing","separator","Box","ChevronsRight","map","item","index","isCurrentPage","key","label","undefined","Link","to","FORMAT_DATE","weekday","year","month","day","FORMAT_DATE_TIME","hour","minute","second","SPREAD_DATE_TIME_FORMAT","timeZoneName","LaunchItem","timestamp","launch","favouriteLaunches","setFavouriteLaunch","isFavourite","findIndex","flight_number","boxShadow","borderWidth","rounded","overflow","position","Image","src","links","flickr_images","replace","mission_patch_small","alt","mission_name","height","objectFit","objectPosition","top","right","d","launch_success","Badge","px","variantColor","textTransform","ml","rocket","rocket_name","launch_site","site_name","lineHeight","isTruncated","launch_date_utc","Intl","DateTimeFormat","format","Date","timeAgo","style","onClick","e","LoadMoreButton","loadMore","data","pageSize","isLoadingMore","isReachingEnd","my","Button","disabled","Spinner","LaunchPadItem","launchPad","favouriteLaunchPads","setFavouriteLaunchPad","id","site_id","attempted_launches","successful_launches","name","vehicles_launched","join","Sidebar","favouriteItems","useDisclosure","isOpen","onOpen","onClose","Drawer","placement","scrollBehavior","Array","isArray","Launches","order","sort","error","isValidating","setSize","fallback","SimpleGrid","m","minChildWidth","flat","Header","bgImage","bgPos","bgSize","bgRepeat","minHeight","Heading","display","backgroundColor","py","borderRadius","Stack","isInline","TimeAndLocation","columns","Stat","Watch","Tooltip","hasArrow","launch_date_local","getDateTime","DateTime","fromISO","locale","setZone","offsetTimeZone","offsetNameShort","toLocaleString","formalDateTimeLocal","MapPin","RouterLink","site_name_long","RocketInfo","cores","first_stage","Navigation","rocket_type","Layers","core","core_serial","every","land_success","second_stage","block","payloads","payload","payload_type","Video","AspectRatioBox","maxH","ratio","title","youtube_id","allowFullScreen","Gallery","images","image","href","Launch","launchId","useParams","details","PageLink","url","children","rest","BrowserLink","ArrowRight","Home","LaunchPads","randomColor","start","end","Math","random","LaunchPadHeader","background","mx","stats","LocationAndVehicles","location","region","Map","latitude","longitude","RecentLaunches","launches","LaunchPad","launchPadId","exact","element","App","useState","setFavouriteLaunches","setFavouriteLaunchPads","useEffect","JSON","parse","localStorage","getItem","getFavouriteLaunchesFromStorage","setItem","stringify","setFavouriteLaunchesInStorage","getFavouriteLaunchPadsFromStorage","setFavouriteLaunchPadsInStorage","event","preventDefault","newFavouriteLaunches","i","splice","push","newFavouriteLaunchPads","ReactDOM","render","StrictMode","ThemeProvider","CSSReset","document","getElementById"],"mappings":"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","file":"static/js/main.5bfcb005.chunk.js","sourcesContent":["import React from \"react\"\nimport { Flex, Text } from \"@chakra-ui/core\"\n\nexport default function NavBar() {\n  return (\n    <Flex as=\"nav\" align=\"center\" justify=\"space-between\" wrap=\"wrap\" padding=\"6\" bg=\"gray.800\" color=\"white\">\n      <Text fontFamily=\"mono\" letterSpacing=\"2px\" fontWeight=\"bold\" fontSize=\"lg\">\n        ¡SPACE&#8226;R0CKETS!\n      </Text>\n    </Flex>\n  )\n}\n","import useSWR, { useSWRInfinite } from \"swr\"\n\nconst fetcher = async (...args) => {\n  const response = await fetch(...args)\n  if (!response.ok) {\n    throw Error(response.statusText)\n  }\n  return await response.json()\n}\n\nfunction getSpaceXUrl(path, options) {\n  const searchParams = new URLSearchParams()\n  for (const property in options) {\n    searchParams.append(property, options[property])\n  }\n\n  const spaceXApiBase = process.env.REACT_APP_SPACEX_API_URL\n  return `${spaceXApiBase}${path}?${searchParams.toString()}`\n}\n\nexport function useSpaceX(path, options) {\n  const endpointUrl = getSpaceXUrl(path, options)\n  return useSWR(path ? endpointUrl : null, fetcher)\n}\n\nexport function useSpaceXPaginated(path, options) {\n  return useSWRInfinite((pageIndex, previousPageData) => {\n    if (previousPageData && !previousPageData.length) {\n      return null\n    }\n    return getSpaceXUrl(path, {\n      ...options,\n      offset: options.limit * pageIndex,\n    })\n  }, fetcher)\n}\n","import React from \"react\"\nimport { Flex, Alert, AlertIcon, AlertTitle, AlertDescription } from \"@chakra-ui/core\"\n\nexport default function Error() {\n  return (\n    <Flex alignItems=\"center\" justifyContent=\"center\" width=\"100%\">\n      <Alert\n        status=\"error\"\n        variant=\"left-accent\"\n        flexDirection=\"column\"\n        justifyContent=\"center\"\n        textAlign=\"center\"\n        p=\"8\"\n      >\n        <AlertIcon size=\"6\" mr={0} />\n        <AlertTitle mt={4} mb={1} fontSize=\"lg\">\n          Problems loading the data\n        </AlertTitle>\n        <AlertDescription maxWidth=\"md\">\n          If the problem persists, try to refresh the page or wait a few minutes and try again.\n        </AlertDescription>\n      </Alert>\n    </Flex>\n  )\n}\n","import React from \"react\"\nimport { Breadcrumb, BreadcrumbItem, BreadcrumbLink, Box } from \"@chakra-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport { ChevronsRight } from \"react-feather\"\n\nexport default function Breadcrumbs({ items }) {\n  return (\n    <Breadcrumb spacing=\"1\" separator={<Box size=\"1em\" as={ChevronsRight} color=\"gray.300\" />}>\n      {items.map((item, index) => {\n        const isCurrentPage = items.length === index + 1\n        return (\n          <BreadcrumbItem isCurrentPage={isCurrentPage} key={item.label}>\n            <BreadcrumbLink as={!isCurrentPage ? Link : undefined} to={!isCurrentPage ? item.to : undefined}>\n              {item.label}\n            </BreadcrumbLink>\n          </BreadcrumbItem>\n        )\n      })}\n    </Breadcrumb>\n  )\n}\n","const PAGE_SIZE = 12\n\nconst LOCAL = \"en-US\"\n\nconst FORMAT_DATE = {\n  weekday: \"long\",\n  year: \"numeric\",\n  month: \"long\",\n  day: \"numeric\",\n}\n\nconst FORMAT_DATE_TIME = {\n  year: \"numeric\",\n  month: \"long\",\n  day: \"numeric\",\n  hour: \"numeric\",\n  minute: \"numeric\",\n  second: \"numeric\",\n}\n\nconst SPREAD_DATE_TIME_FORMAT = {\n  ...FORMAT_DATE_TIME,\n  timeZoneName: \"short\",\n}\n\nexport { PAGE_SIZE, LOCAL, FORMAT_DATE, FORMAT_DATE_TIME, SPREAD_DATE_TIME_FORMAT }\n","import React from \"react\"\nimport { Badge, Box, Image, Text, Flex } from \"@chakra-ui/core\"\nimport { format as timeAgo } from \"timeago.js\"\nimport { Link } from \"react-router-dom\"\nimport { formatDate } from \"utils/format-date\"\nimport { FiHeart } from \"react-icons/fi\"\n\nexport default function LaunchItem({ launch, favouriteLaunches, setFavouriteLaunch }) {\n  const isFavourite = (favouriteLaunches || []).findIndex(item => item.flight_number === launch.flight_number) > -1\n  return (\n    <Box\n      as={Link}\n      to={`/launches/${launch.flight_number.toString()}`}\n      boxShadow=\"md\"\n      borderWidth=\"1px\"\n      rounded=\"lg\"\n      overflow=\"hidden\"\n      position=\"relative\"\n    >\n      <Image\n        src={launch.links.flickr_images[0]?.replace(\"_o.jpg\", \"_z.jpg\") ?? launch.links.mission_patch_small}\n        alt={`${launch.mission_name} launch`}\n        height={[\"200px\", null, \"300px\"]}\n        width=\"100%\"\n        objectFit=\"cover\"\n        objectPosition=\"bottom\"\n      />\n\n      <Image\n        position=\"absolute\"\n        top=\"5\"\n        right=\"5\"\n        src={launch.links.mission_patch_small}\n        height=\"75px\"\n        objectFit=\"contain\"\n        objectPosition=\"bottom\"\n      />\n\n      <Box p=\"6\">\n        <Box d=\"flex\" alignItems=\"baseline\">\n          {launch.launch_success ? (\n            <Badge px=\"2\" variant=\"solid\" variantColor=\"green\">\n              Successful\n            </Badge>\n          ) : (\n            <Badge px=\"2\" variant=\"solid\" variantColor=\"red\">\n              Failed\n            </Badge>\n          )}\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {launch.rocket.rocket_name} &bull; {launch.launch_site.site_name}\n          </Box>\n        </Box>\n\n        <Box mt=\"1\" fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\" isTruncated>\n          {launch.mission_name}\n        </Box>\n\n        <Flex>\n          <Text fontSize=\"sm\">{formatDate(launch.launch_date_utc)} </Text>\n          <Text color=\"gray.500\" ml=\"2\" fontSize=\"sm\">\n            {timeAgo(launch.launch_date_utc)}\n          </Text>\n        </Flex>\n\n        <Flex justifyContent=\"flex-end\">\n          <Box>\n            {isFavourite ? (\n              <FiHeart style={{ color: \"red\" }} onClick={e => setFavouriteLaunch(launch, e)} />\n            ) : (\n              <FiHeart onClick={e => setFavouriteLaunch(launch, e)} />\n            )}\n          </Box>\n        </Flex>\n      </Box>\n    </Box>\n  )\n}\n","import { DateTime } from \"luxon\"\nimport { FORMAT_DATE, LOCAL, FORMAT_DATE_TIME, SPREAD_DATE_TIME_FORMAT } from \"./constants\"\n\nexport function formatDate(timestamp) {\n  return new Intl.DateTimeFormat(LOCAL, FORMAT_DATE).format(new Date(timestamp))\n}\n\nexport function formatDateTime(timestamp) {\n  return new Intl.DateTimeFormat(LOCAL, SPREAD_DATE_TIME_FORMAT).format(new Date(timestamp))\n}\n\nexport function formalDateTimeLocal(timestamp) {\n  const getDateTime = DateTime.fromISO(timestamp, { locale: LOCAL, setZone: true })\n  const offsetTimeZone = getDateTime.offsetNameShort\n  const localDateTime = getDateTime.toLocaleString(FORMAT_DATE_TIME)\n  return localDateTime + \" \" + offsetTimeZone\n}\n","import React from \"react\"\nimport { Spinner, Flex, Button } from \"@chakra-ui/core\"\n\nexport default function LoadMoreButton({ loadMore, data, pageSize, isLoadingMore }) {\n  const isReachingEnd = data?.[0]?.length === 0 || (data && data[data.length - 1]?.length < pageSize)\n\n  return (\n    <Flex justifyContent=\"center\" my=\"100px\">\n      <Button onClick={loadMore} disabled={isReachingEnd || isLoadingMore}>\n        {isLoadingMore ? <Spinner /> : isReachingEnd ? \"That's all!\" : \"Show more...\"}\n      </Button>\n    </Flex>\n  )\n}\n","import React from \"react\"\nimport { Badge, Box, Text, Flex } from \"@chakra-ui/core\"\nimport { Link } from \"react-router-dom\"\nimport { FiHeart } from \"react-icons/fi\"\n\nexport default function LaunchPadItem({ launchPad, favouriteLaunchPads, setFavouriteLaunchPad }) {\n  const isFavourite = (favouriteLaunchPads || []).findIndex(item => item.id === launchPad.id) > -1\n\n  return (\n    <Box\n      as={Link}\n      to={`/launch-pads/${launchPad.site_id}`}\n      boxShadow=\"md\"\n      borderWidth=\"1px\"\n      rounded=\"lg\"\n      overflow=\"hidden\"\n      position=\"relative\"\n    >\n      <Box p=\"6\">\n        <Box d=\"flex\" alignItems=\"baseline\">\n          {launchPad.status === \"active\" ? (\n            <Badge px=\"2\" variant=\"solid\" variantColor=\"green\">\n              Active\n            </Badge>\n          ) : (\n            <Badge px=\"2\" variant=\"solid\" variantColor=\"red\">\n              Retired\n            </Badge>\n          )}\n          <Box\n            color=\"gray.500\"\n            fontWeight=\"semibold\"\n            letterSpacing=\"wide\"\n            fontSize=\"xs\"\n            textTransform=\"uppercase\"\n            ml=\"2\"\n          >\n            {launchPad.attempted_launches} attempted &bull; {launchPad.successful_launches} succeeded\n          </Box>\n        </Box>\n\n        <Box mt=\"1\" fontWeight=\"semibold\" as=\"h4\" lineHeight=\"tight\" isTruncated>\n          {launchPad.name}\n        </Box>\n        <Text color=\"gray.500\" fontSize=\"sm\">\n          {launchPad.vehicles_launched.join(\", \")}\n        </Text>\n\n        <Flex justifyContent=\"flex-end\">\n          <Box>\n            {isFavourite ? (\n              <FiHeart style={{ color: \"red\" }} onClick={e => setFavouriteLaunchPad(launchPad, e)} />\n            ) : (\n              <FiHeart onClick={e => setFavouriteLaunchPad(launchPad, e)} />\n            )}\n          </Box>\n        </Flex>\n      </Box>\n    </Box>\n  )\n}\n","import React from \"react\"\nimport {\n  Button,\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerCloseButton,\n  useDisclosure,\n  Alert,\n  AlertIcon,\n} from \"@chakra-ui/core\"\nimport LaunchPadItem from \"../LaunchPadItem\"\nimport LaunchItem from \"../LaunchItem\"\n\nexport default function Sidebar({ favouriteItems, setFavouriteLaunch }) {\n  const { isOpen, onOpen, onClose } = useDisclosure()\n\n  const renderDrawBody = () => {\n    return (\n      <DrawerBody>\n        {favouriteItems.map(item =>\n          item.id ? (\n            <LaunchPadItem\n              key={item.id}\n              launchPad={item}\n              favouriteLaunchPads={favouriteItems}\n              setFavouriteLaunchPad={setFavouriteLaunch}\n            />\n          ) : (\n            <LaunchItem\n              key={item.flight_number}\n              launch={item}\n              favouriteLaunches={favouriteItems}\n              setFavouriteLaunch={setFavouriteLaunch}\n            />\n          )\n        )}\n      </DrawerBody>\n    )\n  }\n\n  const renderAlert = () => {\n    return (\n      <Alert status=\"warning\">\n        <AlertIcon />\n        Seems your list still empty\n      </Alert>\n    )\n  }\n\n  return (\n    <div>\n      <Button onClick={onOpen}>Favourites list here</Button>\n      <Drawer isOpen={isOpen} placement=\"right\" onClose={onClose} scrollBehavior={\"inside\"}>\n        <DrawerContent>\n          <DrawerCloseButton />\n          {Array.isArray(favouriteItems) && favouriteItems.length > 0 ? renderDrawBody() : renderAlert()}\n        </DrawerContent>\n      </Drawer>\n    </div>\n  )\n}\n","import React, { Suspense } from \"react\"\nimport { SimpleGrid, Spinner, Flex } from \"@chakra-ui/core\"\nimport { useSpaceXPaginated } from \"utils/use-space-x\"\nimport Error from \"components/Error\"\nimport Breadcrumbs from \"components/Breadcrumbs\"\nimport LaunchItem from \"components/LaunchItem\"\nimport LoadMoreButton from \"components/LoadMoreButton\"\nimport { PAGE_SIZE } from \"utils/constants\"\nimport Sidebar from \"components/Sidebar\"\n\nexport default function Launches({ favouriteLaunches, setFavouriteLaunch }) {\n  const { data, error, isValidating, setSize, size } = useSpaceXPaginated(\"/launches/past\", {\n    limit: PAGE_SIZE,\n    order: \"desc\",\n    sort: \"launch_date_utc\",\n  })\n\n  return (\n    <div>\n      <Suspense fallback={<Spinner />}>\n        <Flex p=\"6\" flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Breadcrumbs items={[{ label: \"Home\", to: \"/\" }, { label: \"Launches\" }]} />\n          <Sidebar favouriteItems={favouriteLaunches} setFavouriteLaunch={setFavouriteLaunch} />\n        </Flex>\n        <SimpleGrid m={[2, null, 6]} minChildWidth=\"350px\" spacing=\"4\">\n          {error && <Error />}\n          {data &&\n            data\n              .flat()\n              .map(launch => (\n                <LaunchItem\n                  favouriteLaunches={favouriteLaunches}\n                  setFavouriteLaunch={setFavouriteLaunch}\n                  launch={launch}\n                  key={launch.flight_number}\n                />\n              ))}\n        </SimpleGrid>\n        <LoadMoreButton\n          loadMore={() => setSize(size + 1)}\n          data={data}\n          pageSize={PAGE_SIZE}\n          isLoadingMore={isValidating}\n        />\n      </Suspense>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Flex, Heading, Badge, Image, Stack } from \"@chakra-ui/core\"\n\nexport default function Header({ launch }) {\n  return (\n    <Flex\n      bgImage={`url(${launch.links.flickr_images[0]})`}\n      bgPos=\"center\"\n      bgSize=\"cover\"\n      bgRepeat=\"no-repeat\"\n      minHeight=\"30vh\"\n      position=\"relative\"\n      p={[2, 6]}\n      alignItems=\"flex-end\"\n      justifyContent=\"space-between\"\n    >\n      <Image\n        position=\"absolute\"\n        top=\"5\"\n        right=\"5\"\n        src={launch.links.mission_patch_small}\n        height={[\"85px\", \"150px\"]}\n        objectFit=\"contain\"\n        objectPosition=\"bottom\"\n      />\n      <Heading\n        color=\"white\"\n        display=\"inline\"\n        backgroundColor=\"#718096b8\"\n        fontSize={[\"lg\", \"5xl\"]}\n        px=\"4\"\n        py=\"2\"\n        borderRadius=\"lg\"\n      >\n        {launch.mission_name}\n      </Heading>\n      <Stack isInline spacing=\"3\">\n        <Badge variantColor=\"purple\" fontSize={[\"xs\", \"md\"]}>\n          #{launch.flight_number}\n        </Badge>\n        {launch.launch_success ? (\n          <Badge variantColor=\"green\" fontSize={[\"xs\", \"md\"]}>\n            Successful\n          </Badge>\n        ) : (\n          <Badge variantColor=\"red\" fontSize={[\"xs\", \"md\"]}>\n            Failed\n          </Badge>\n        )}\n      </Stack>\n    </Flex>\n  )\n}\n","import React from \"react\"\nimport { Link as RouterLink } from \"react-router-dom\"\nimport { format as timeAgo } from \"timeago.js\"\nimport { Watch, MapPin } from \"react-feather\"\nimport { formatDateTime, formalDateTimeLocal } from \"utils/format-date\"\nimport { Stat, StatLabel, StatNumber, StatHelpText, SimpleGrid, Box, Link, Tooltip } from \"@chakra-ui/core\"\n\nexport default function TimeAndLocation({ launch }) {\n  return (\n    <SimpleGrid columns={[1, 1, 2]} borderWidth=\"1px\" p=\"4\" borderRadius=\"md\">\n      <Stat>\n        <StatLabel display=\"flex\">\n          <Box as={Watch} width=\"1em\" />{\" \"}\n          <Box ml=\"2\" as=\"span\">\n            Launch Date\n          </Box>\n        </StatLabel>\n        <Tooltip hasArrow placement=\"bottom\" label={\"Your local time \" + formatDateTime(launch.launch_date_local)}>\n          {formalDateTimeLocal(launch.launch_date_local)}\n        </Tooltip>\n        <StatHelpText>{timeAgo(launch.launch_date_utc)}</StatHelpText>\n      </Stat>\n      <Stat>\n        <StatLabel display=\"flex\">\n          <Box as={MapPin} width=\"1em\" />{\" \"}\n          <Box ml=\"2\" as=\"span\">\n            Launch Site\n          </Box>\n        </StatLabel>\n        <StatNumber fontSize={[\"md\", \"xl\"]}>\n          <Link as={RouterLink} to={`/launch-pads/${launch.launch_site.site_id}`}>\n            {launch.launch_site.site_name_long}\n          </Link>\n        </StatNumber>\n        <StatHelpText>{launch.launch_site.site_name}</StatHelpText>\n      </Stat>\n    </SimpleGrid>\n  )\n}\n","import React from \"react\"\nimport { Navigation, Layers } from \"react-feather\"\nimport { Stat, StatLabel, StatNumber, StatHelpText, SimpleGrid, Box, StatGroup } from \"@chakra-ui/core\"\n\nexport default function RocketInfo({ launch }) {\n  const cores = launch.rocket.first_stage.cores\n\n  return (\n    <SimpleGrid columns={[1, 1, 2]} borderWidth=\"1px\" mt=\"4\" p=\"4\" borderRadius=\"md\">\n      <Stat>\n        <StatLabel display=\"flex\">\n          <Box as={Navigation} width=\"1em\" />\n          <Box ml=\"2\" as=\"span\">\n            Rocket\n          </Box>\n        </StatLabel>\n        <StatNumber fontSize={[\"md\", \"xl\"]}>{launch.rocket.rocket_name}</StatNumber>\n        <StatHelpText>{launch.rocket.rocket_type}</StatHelpText>\n      </Stat>\n      <StatGroup>\n        <Stat>\n          <StatLabel display=\"flex\">\n            <Box as={Layers} width=\"1em\" />\n            <Box ml=\"2\" as=\"span\">\n              First Stage\n            </Box>\n          </StatLabel>\n          <StatNumber fontSize={[\"md\", \"xl\"]}>{cores.map(core => core.core_serial).join(\", \")}</StatNumber>\n          <StatHelpText>\n            {cores.every(core => core.land_success) ? (cores.length === 1 ? \"Recovered\" : \"All recovered\") : \"Lost\"}\n          </StatHelpText>\n        </Stat>\n        <Stat>\n          <StatLabel display=\"flex\">\n            <Box as={Layers} width=\"1em\" />\n            <Box ml=\"2\" as=\"span\">\n              Second Stage\n            </Box>\n          </StatLabel>\n          <StatNumber fontSize={[\"md\", \"xl\"]}>Block {launch.rocket.second_stage.block}</StatNumber>\n          <StatHelpText>\n            Payload: {launch.rocket.second_stage.payloads.map(payload => payload.payload_type).join(\", \")}\n          </StatHelpText>\n        </Stat>\n      </StatGroup>\n    </SimpleGrid>\n  )\n}\n","import React from \"react\"\nimport { Box, AspectRatioBox } from \"@chakra-ui/core\"\n\nexport default function Video({ launch }) {\n  return (\n    <AspectRatioBox maxH=\"400px\" ratio={1.7}>\n      <Box\n        as=\"iframe\"\n        title={launch.mission_name}\n        src={`https://www.youtube.com/embed/${launch.links.youtube_id}`}\n        allowFullScreen\n      />\n    </AspectRatioBox>\n  )\n}\n","import React from \"react\"\nimport { SimpleGrid, Image } from \"@chakra-ui/core\"\n\nexport default function Gallery({ images }) {\n  return (\n    <SimpleGrid my=\"6\" minChildWidth=\"350px\" spacing=\"4\">\n      {images.map(image => (\n        <a href={image} key={image}>\n          <Image src={image.replace(\"_o.jpg\", \"_z.jpg\")} />\n        </a>\n      ))}\n    </SimpleGrid>\n  )\n}\n","import React from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { Flex, Box, Text, Spinner } from \"@chakra-ui/core\"\nimport { useSpaceX } from \"utils/use-space-x\"\nimport Error from \"components/Error\"\nimport Breadcrumbs from \"components/Breadcrumbs\"\nimport Header from \"components/Header\"\nimport TimeAndLocation from \"components/TimeAndLocation\"\nimport RocketInfo from \"components/RocketInfo\"\nimport Video from \"components/Video\"\nimport Gallery from \"components/Gallery\"\n\nexport default function Launch() {\n  let { launchId } = useParams()\n  const { data: launch, error } = useSpaceX(`/launches/${launchId}`)\n\n  if (error) return <Error />\n  if (!launch) {\n    return (\n      <Flex justifyContent=\"center\" alignItems=\"center\" minHeight=\"50vh\">\n        <Spinner size=\"lg\" />\n      </Flex>\n    )\n  }\n\n  return (\n    <div>\n      <Flex p=\"6\" flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Breadcrumbs\n          items={[{ label: \"Home\", to: \"/\" }, { label: \"Launches\", to: \"..\" }, { label: `#${launch.flight_number}` }]}\n        />\n      </Flex>\n      <Header launch={launch} />\n      <Box m={[3, 6]}>\n        <TimeAndLocation launch={launch} />\n        <RocketInfo launch={launch} />\n        <Text color=\"gray.700\" fontSize={[\"md\", null, \"lg\"]} my=\"8\">\n          {launch.details}\n        </Text>\n        <Video launch={launch} />\n        <Gallery images={launch.links.flickr_images} />\n      </Box>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Flex, Box, Text, Link } from \"@chakra-ui/core\"\nimport { ArrowRight } from \"react-feather\"\nimport { Link as BrowserLink } from \"react-router-dom\"\n\nexport default function PageLink({ url, children, ...rest }) {\n  return (\n    <Link as={BrowserLink} to={url} {...rest}>\n      <Flex justifyContent=\"space-between\" p=\"6\" boxShadow=\"md\" borderWidth=\"1px\" rounded=\"lg\">\n        <Text fontSize=\"lg\">{children}</Text>\n        <Box as={ArrowRight} />\n      </Flex>\n    </Link>\n  )\n}\n","import React from \"react\"\nimport { Stack } from \"@chakra-ui/core\"\nimport PageLink from \"components/PageLink\"\n\nexport default function Home() {\n  return (\n    <Stack m=\"6\" spacing=\"6\">\n      <PageLink url=\"/launches\">Browse SpaceX Launches</PageLink>\n      <PageLink url=\"/launch-pads\">Browse SpaceX Launch Pads</PageLink>\n    </Stack>\n  )\n}\n","import React from \"react\"\nimport { SimpleGrid, Flex } from \"@chakra-ui/core\"\nimport Error from \"components/Error\"\nimport Breadcrumbs from \"components/Breadcrumbs\"\nimport LoadMoreButton from \"components/LoadMoreButton\"\nimport LaunchPadItem from \"components/LaunchPadItem\"\nimport Sidebar from \"components/Sidebar\"\nimport { useSpaceXPaginated } from \"utils/use-space-x\"\nimport { PAGE_SIZE } from \"utils/constants\"\n\nexport default function LaunchPads({ favouriteLaunchPads, setFavouriteLaunchPad }) {\n  const { data, error, isValidating, size, setSize } = useSpaceXPaginated(\"/launchpads\", {\n    limit: PAGE_SIZE,\n  })\n\n  return (\n    <div>\n      <Flex p=\"6\" flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Breadcrumbs items={[{ label: \"Home\", to: \"/\" }, { label: \"Launches\" }]} />\n        <Sidebar favouriteItems={favouriteLaunchPads} setFavouriteLaunchPad={setFavouriteLaunchPad} />\n      </Flex>\n      <SimpleGrid m={[2, null, 6]} minChildWidth=\"350px\" spacing=\"4\">\n        {error && <Error />}\n        {data &&\n          data\n            .flat()\n            .map(launchPad => (\n              <LaunchPadItem\n                favouriteLaunchPads={favouriteLaunchPads}\n                setFavouriteLaunchPad={setFavouriteLaunchPad}\n                key={launchPad.site_id}\n                launchPad={launchPad}\n              />\n            ))}\n      </SimpleGrid>\n      <LoadMoreButton\n        loadMore={() => setSize(size + 1)}\n        data={data}\n        pageSize={PAGE_SIZE}\n        isLoadingMore={isValidating}\n      />\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Flex, Heading, Badge, Stack } from \"@chakra-ui/core\"\n\nconst randomColor = (start = 200, end = 250) => `hsl(${start + end * Math.random()}, 80%, 90%)`\n\nexport default function LaunchPadHeader({ launchPad }) {\n  return (\n    <Flex\n      background={`linear-gradient(${randomColor()}, ${randomColor()})`}\n      bgPos=\"center\"\n      bgSize=\"cover\"\n      bgRepeat=\"no-repeat\"\n      minHeight=\"15vh\"\n      position=\"relative\"\n      flexDirection={[\"column\", \"row\"]}\n      p={[2, 6]}\n      alignItems=\"flex-end\"\n      justifyContent=\"space-between\"\n    >\n      <Heading color=\"gray.900\" display=\"inline\" mx={[2, 4]} my=\"2\" fontSize={[\"md\", \"3xl\"]} borderRadius=\"lg\">\n        {launchPad.site_name_long}\n      </Heading>\n      <Stack isInline spacing=\"3\">\n        <Badge variantColor=\"purple\" fontSize={[\"sm\", \"md\"]}>\n          {launchPad.successful_launches}/{launchPad.attempted_launches} successful\n        </Badge>\n        {launchPad.stats === \"active\" ? (\n          <Badge variantColor=\"green\" fontSize={[\"sm\", \"md\"]}>\n            Active\n          </Badge>\n        ) : (\n          <Badge variantColor=\"red\" fontSize={[\"sm\", \"md\"]}>\n            Retired\n          </Badge>\n        )}\n      </Stack>\n    </Flex>\n  )\n}\n","import React from \"react\"\nimport { MapPin, Navigation } from \"react-feather\"\nimport { Stat, StatLabel, StatNumber, StatHelpText, SimpleGrid, Box } from \"@chakra-ui/core\"\n\nexport default function LocationAndVehicles({ launchPad }) {\n  return (\n    <SimpleGrid columns={[1, 1, 2]} borderWidth=\"1px\" p=\"4\" borderRadius=\"md\">\n      <Stat>\n        <StatLabel display=\"flex\">\n          <Box as={MapPin} width=\"1em\" />{\" \"}\n          <Box ml=\"2\" as=\"span\">\n            Location\n          </Box>\n        </StatLabel>\n        <StatNumber fontSize=\"xl\">{launchPad.location.name}</StatNumber>\n        <StatHelpText>{launchPad.location.region}</StatHelpText>\n      </Stat>\n      <Stat>\n        <StatLabel display=\"flex\">\n          <Box as={Navigation} width=\"1em\" />{\" \"}\n          <Box ml=\"2\" as=\"span\">\n            Vehicles\n          </Box>\n        </StatLabel>\n        <StatNumber fontSize=\"xl\">{launchPad.vehicles_launched.join(\", \")}</StatNumber>\n      </Stat>\n    </SimpleGrid>\n  )\n}\n","import React from \"react\"\nimport { Box, AspectRatioBox } from \"@chakra-ui/core\"\n\nexport default function Map({ location }) {\n  return (\n    <AspectRatioBox ratio={16 / 5}>\n      <Box\n        as=\"iframe\"\n        src={`https://maps.google.com/maps?q=${location.latitude}, ${location.longitude}&z=15&output=embed`}\n        alt=\"demo\"\n      />\n    </AspectRatioBox>\n  )\n}\n","import React from \"react\"\nimport { SimpleGrid, Text, Stack } from \"@chakra-ui/core\"\nimport LaunchItem from \"components/LaunchItem\"\n\nexport default function RecentLaunches({ launches }) {\n  if (!launches?.length) {\n    return null\n  }\n  return (\n    <Stack my=\"8\" spacing=\"3\">\n      <Text fontSize=\"xl\" fontWeight=\"bold\">\n        Last launches\n      </Text>\n      <SimpleGrid minChildWidth=\"350px\" spacing=\"4\">\n        {launches.map(launch => (\n          <LaunchItem launch={launch} key={launch.flight_number} />\n        ))}\n      </SimpleGrid>\n    </Stack>\n  )\n}\n","import React from \"react\"\nimport { useParams } from \"react-router-dom\"\nimport { Flex, Box, Text, Spinner } from \"@chakra-ui/core\"\nimport { useSpaceX } from \"utils/use-space-x\"\nimport Error from \"components/Error\"\nimport Breadcrumbs from \"components/Breadcrumbs\"\nimport LaunchPadHeader from \"components/LaunchPadHeader\"\nimport LocationAndVehicles from \"components/LocationAndVehicles\"\nimport Map from \"components/Map\"\nimport RecentLaunches from \"components/RecentLaunches\"\n\nexport default function LaunchPad() {\n  let { launchPadId } = useParams()\n  const { data: launchPad, error } = useSpaceX(`/launchpads/${launchPadId}`)\n\n  const { data: launches } = useSpaceX(launchPad ? \"/launches/past\" : null, {\n    limit: 3,\n    order: \"desc\",\n    sort: \"launch_date_utc\",\n    site_id: launchPad?.site_id,\n  })\n\n  if (error) return <Error />\n  if (!launchPad) {\n    return (\n      <Flex justifyContent=\"center\" alignItems=\"center\" minHeight=\"50vh\">\n        <Spinner size=\"lg\" />\n      </Flex>\n    )\n  }\n\n  return (\n    <div>\n      <Flex p=\"6\" flexDirection=\"row\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Breadcrumbs\n          items={[{ label: \"Home\", to: \"/\" }, { label: \"Launch Pads\", to: \"..\" }, { label: launchPad.name }]}\n        />\n      </Flex>\n      <LaunchPadHeader launchPad={launchPad} />\n      <Box m={[3, 6]}>\n        <LocationAndVehicles launchPad={launchPad} />\n        <Text color=\"gray.700\" fontSize={[\"md\", null, \"lg\"]} my=\"8\">\n          {launchPad.details}\n        </Text>\n        <Map location={launchPad.location} />\n        <RecentLaunches launches={launches} />\n      </Box>\n    </div>\n  )\n}\n","import React from \"react\"\nimport { Routes, Route } from \"react-router-dom\"\nimport Launches from \"../pages/Launches\"\nimport Launch from \"../pages/Launch\"\nimport Home from \"../pages/Home\"\nimport LaunchPads from \"../pages/LaunchPads\"\nimport LaunchPad from \"../pages/LaunchPad\"\n\nexport default function Navigation({\n  favouriteLaunches,\n  favouriteLaunchPads,\n  setFavouriteLaunch,\n  setFavouriteLaunchPad,\n}) {\n  return (\n    <>\n      <Routes>\n        <Route exact path=\"/\" element={<Home />} />\n        <Route\n          path=\"/launches\"\n          element={<Launches favouriteLaunches={favouriteLaunches} setFavouriteLaunch={setFavouriteLaunch} />}\n        />\n        <Route path=\"/launches/:launchId\" element={<Launch />} />\n        <Route\n          path=\"/launch-pads\"\n          element={\n            <LaunchPads favouriteLaunchPads={favouriteLaunchPads} setFavouriteLaunchPad={setFavouriteLaunchPad} />\n          }\n        />\n        <Route\n          path=\"/launch-pads/:launchPadId\"\n          element={\n            <LaunchPad favouriteLaunchPads={favouriteLaunchPads} setFavouriteLaunchPad={setFavouriteLaunchPad} />\n          }\n        />\n      </Routes>\n    </>\n  )\n}\n","import React, { useEffect, useState } from \"react\"\nimport NavBar from \"../NavBar\"\nimport Navigation from \"navigation/Navigation\"\nimport {\n  getFavouriteLaunchesFromStorage,\n  setFavouriteLaunchesInStorage,\n  getFavouriteLaunchPadsFromStorage,\n  setFavouriteLaunchPadsInStorage,\n} from \"utils/launches-storage\"\n\nexport default function App() {\n  const [favouriteLaunches, setFavouriteLaunches] = useState([])\n  const [favouriteLaunchPads, setFavouriteLaunchPads] = useState([])\n\n  const setFavouriteLaunch = (launch, event) => {\n    event.preventDefault()\n    const newFavouriteLaunches = favouriteLaunches\n    const item = (newFavouriteLaunches || []).findIndex(i => i.flight_number === launch.flight_number)\n    item > -1 ? newFavouriteLaunches.splice(item, 1) : newFavouriteLaunches.push(launch)\n    setFavouriteLaunches([...newFavouriteLaunches])\n  }\n\n  const setFavouriteLaunchPad = (launchPad, event) => {\n    event.preventDefault()\n    const newFavouriteLaunchPads = favouriteLaunchPads\n    const item = (newFavouriteLaunchPads || []).findIndex(i => i.id === launchPad.id)\n    item > -1 ? newFavouriteLaunchPads.splice(item, 1) : newFavouriteLaunchPads.push(launchPad)\n    setFavouriteLaunchPads([...newFavouriteLaunchPads])\n  }\n\n  useEffect(() => {\n    getFavouriteLaunchesFromStorage(setFavouriteLaunches)\n  }, [])\n\n  useEffect(() => {\n    setFavouriteLaunchesInStorage(favouriteLaunches)\n  }, [favouriteLaunches])\n\n  useEffect(() => {\n    getFavouriteLaunchPadsFromStorage(setFavouriteLaunchPads)\n  }, [])\n\n  useEffect(() => {\n    setFavouriteLaunchPadsInStorage(favouriteLaunchPads)\n  }, [favouriteLaunchPads])\n\n  return (\n    <div>\n      <NavBar />\n      <Navigation\n        favouriteLaunches={favouriteLaunches}\n        favouriteLaunchPads={favouriteLaunchPads}\n        setFavouriteLaunch={setFavouriteLaunch}\n        setFavouriteLaunchPad={setFavouriteLaunchPad}\n      />\n    </div>\n  )\n}\n","const getFavouriteLaunchesFromStorage = setFavouriteLaunches => {\n  const favouriteLaunches = JSON.parse(localStorage.getItem(\"favouriteLaunches\")) || []\n  favouriteLaunches.length > 0 && setFavouriteLaunches(favouriteLaunches)\n}\n\nconst setFavouriteLaunchesInStorage = favouriteLaunches => {\n  localStorage.setItem(\"favouriteLaunches\", JSON.stringify(favouriteLaunches))\n}\n\nconst getFavouriteLaunchPadsFromStorage = setFavouriteLaunchPads => {\n  const favouriteLaunchPads = JSON.parse(localStorage.getItem(\"favouriteLaunchPads\")) || []\n  favouriteLaunchPads.length > 0 && setFavouriteLaunchPads(favouriteLaunchPads)\n}\n\nconst setFavouriteLaunchPadsInStorage = favouriteLaunchPads => {\n  localStorage.setItem(\"favouriteLaunchPads\", JSON.stringify(favouriteLaunchPads))\n}\n\nexport {\n  getFavouriteLaunchesFromStorage,\n  setFavouriteLaunchesInStorage,\n  getFavouriteLaunchPadsFromStorage,\n  setFavouriteLaunchPadsInStorage,\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { HashRouter as Router } from \"react-router-dom\"\nimport { ThemeProvider, CSSReset } from \"@chakra-ui/core\"\nimport App from \"./components/App\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <ThemeProvider>\n        <CSSReset />\n        <App />\n      </ThemeProvider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}